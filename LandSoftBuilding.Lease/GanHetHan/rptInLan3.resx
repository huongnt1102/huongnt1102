<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="xrTableCell17.Text" xml:space="preserve">
    <value>Lưu Ý: Các hộ kinh doanh khi đi nộp tiền thuê gian hàng mang theo tiền đi nộp tiền phí tồn cũ và phí của năm tiếp theo. Ban quản lý sẽ chỉ thu tiền gian hàng khi các hộ kinh doanh đã nộp đủ các loại tiền phí.</value>
  </data>
  <data name="xrTableCell12.Text" xml:space="preserve">
    <value>        Căn cứ Hợp đồng kinh tế được ký kết giữa hộ kinh doanh với [CongTyQL] về việc khai thác quyền sử dụng điểm kinh doanh tại [CongTyQL].
        Ban quản lý [TenDiaDiem] thông báo về việc nộp tiền gia hạn gian hàng năm [namHH] như sau:

        Năm [NamHL] hộ kinh doanh: [TenKH] đã thuê gian hàng số:  [MatBang], ngành hàng: [NganhHang].
        Tổng giá trị gian hàng năm [NamHL]: [SoTien] đồng (đã bao gồm VAT 10%). 
        Thời gian thuê năm [NamHL] từ ngày [DateNgayHL] đến ngày [DateNgayHH].
        Ngày [ngayIn1] tháng [thangIn1] năm [namIn1], Ban quản lý [TenDiaDiem] đã ra thông báo số 10.2016/TB-TT-CBH thông báo về việc nộp tiền gia hạn gian hàng hết hạn tháng [thangHH]/[namHH] (lần 1).
        Ngày [ngayIn2] tháng [thangIn2] năm [namIn2], Ban quản lý [TenDiaDiem] tiếp tục ra thông báo số 11.2016/TB-TT-CBH thông báo về việc nộp tiền gia hạn gian hàng hết hạn tháng [thangHH]/[namHH] (lần 2).

        Tuy nhiên đến nay hộ kinh doanh [TenKH] vẫn chưa lên nộp tiền gia hạn gian hàng cho ban quản lý. Một lần nữa Ban quản lý [TenDiaDiem] thông báo nếu hộ kinh doanh có nhu cầu muốn gia hạn hợp đồng gian hàng trên thì lên nộp tiền gia hạn trước khi kết thúc hợp đồng thuê gian hàng. Cụ thể trước ngày [DateNgayHH].
        Nếu đến hết ngày [DateNgayHH]  hộ kinh doanh không lên nộp tiền và hoàn thiện các thủ tục gia hạn gian hàng. Ban quản lý [TenDiaDiem] coi như hộ kinh doanh không có nhu cầu gia hạn thuê tiếp gian hàng: [MatBang]  nữa. Ban quản lý [TenDiaDiem] sẽ ngừng cung cấp tất cả các dịch vụ điện, nước đóng cửa thu hồi lại gian hàng và bố trí sắp sếp cho hộ kinh doanh khác có nhu cầu thuê. 

        Vậy Ban quản lý [TenDiaDiem] thông báo để Ông (bà) [TenKH] biết và nghiêm túc thực hiện.
</value>
  </data>
</root>