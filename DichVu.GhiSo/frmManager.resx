<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="barManager1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>52, 25</value>
  </metadata>
  <metadata name="imageCollection1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>177, 25</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v18.2" name="DevExpress.Utils.v18.2, Version=18.2.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imageCollection1.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v18.2" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYxOC4yLCBWZXJzaW9uPTE4LjIu
        Ny4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAABAAAAAQAAAACQUAAAAP
        BQAAAH8LAAACzQEAAIlQTkcNChoKAAAADUlIRFIAAAAQAAAAEAgGAAAAH/P/YQAAAAFzUkdCAK7OHOkA
        AAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAABYklEQVQ4T61Sv0vEMBjtqYPgcoIo
        tZf0FMTNxV1HQefTSVDEyf/B4GCT9ARHZ1f/DBVn/wDlOPPjFuGcdBHr1ySt7dXCCT74oHnvfS9f0nj/
        jyRphEweYqaSUlEl/Qs151y/A3cHS5XGSslb2KURkl7TJ4XAYjOi4iEkybSTDBCTu9D8aXQmnzGVXz8T
        wdj5DvHgxJJVdG6SScTUMPPmASiWBy753hA1WCZP8/lGxYCMgHOVxh4Fpnq9WJskmbKCCzCLMdBiL1uI
        So2YODOECYBLMYsx0KZ6w/RE8tpRfwNm+jwNQFzuOcIeIas2l6tGqAHm6i31hZfDpiUKzUEs1gxZA/Ac
        Gy9V744qB6T/eaH7OOOkEkA/yn28v+hoGxBwsQLvoJcZ4FLvcCT2w0hvw8vk8ArN2FYTO67VImCvLfcJ
        NyxPc+NIwXQfpZ1rQciEzxTGXEOYuIJpOpj2Z51agOd9A8OCDtxVp6M/AAAAAElFTkSuQmCCIAEAAIlQ
        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
        AAAAAElFTkSuQmCCCw==
</value>
  </data>
</root>